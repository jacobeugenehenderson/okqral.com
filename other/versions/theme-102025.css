/* =======================================================================
   LGBTQRCODE — THEME.CSS
   Master style sheet controlling UI variables, theming, and component look.
   Author: Jacob Eugene Henderson
   -----------------------------------------------------------------------
   STRUCTURE OVERVIEW
   -----------------------------------------------------------------------
   1.  CONTROL PANEL — BASE (dark mode default)
         • Global design tokens and CSS variables (color, radii, density, motion)
         • Defines reusable Material-inspired system values (md-sys-color-* etc.)
   2.  GLOBAL SCAFFOLD
         • Body background gradients, theme grid overlay, layout padding
   3.  CARDS / SURFACES
         • Card containers, elevation shadows, stepper highlights
   4.  CONTROLS
         • Inputs, selects, buttons, and top-bar menu items
         • Includes hover/focus, emoji picker, and color-chip definitions
   5.  PREVIEW LAYOUT
         • QR preview area, SVG mount, transparent-frame styling
   6.  ARROWS
         • Navigation arrows for QR subtype switching
   7.  FOOTER
         • Fixed footer gradient bar and copyright text
   8.  THEME MODES
         • :root.light, :root.hc, and reduced-motion overrides
   9.  UTILITIES / OVERRIDES (sandbox)
         • Temporary tweaks, experimental features, or future controls
   -----------------------------------------------------------------------
   NOTES
   -----------------------------------------------------------------------
   • Variables follow Material Design token conventions where possible.
   • All custom properties begin with `--md-sys-`, `--ui-`, or `--qr-` prefixes.
   • JS can read certain variables via `getComputedStyle()` (e.g., --export-*).
   • To add new features, prefer creating new tokens at the top-level :root.
   • For experiments or nonstandard styling, append at the bottom section (9).
   ======================================================================= */

/* =========================
   1. CONTROL PANEL — BASE (dark by default)
========================= */
:root{
  /* ----- Brand / Accent (HSL-based) ----- */
  --brand-h: 266;
  --brand-s: 92%;
  --brand-l: 66%;
  --md-sys-color-primary: hsl(var(--brand-h) var(--brand-s) var(--brand-l));
  --md-sys-color-primary-hover: color-mix(in oklab, var(--md-sys-color-primary) 86%, white);
  --md-sys-color-primary-pressed: color-mix(in oklab, var(--md-sys-color-primary) 80%, black);

  /* Typography */
  --font-family: system-ui, -apple-system, "Segoe UI", Roboto, Inter, sans-serif;

  /* Display (section buttons: Caption, Design, Mechanicals, Finish) */
  --typo-display-size: 1rem;         /* 16px */
  --typo-display-weight: 600;        /* semibold */
  --typo-display-track: .012em;

  /* Labels (field names like “Module Fill”, “Background”) */
  --typo-label-size: .9375rem;       /* 15px */
  --typo-label-weight: 300;          /* medium */
  --typo-label-track: .01em;
  --typo-label-color: color-mix(in oklab, var(--md-sys-color-on-surface) 82%, transparent);

  /* Inputs text (inside fields) */
  --typo-input-size: .9375rem;       /* 15px */
  --typo-input-weight: 200;

  /* Placeholder text (“dummy” text) */
  --typo-ph-color: color-mix(in oklab, var(--md-sys-color-on-surface) 55%, transparent);
  --typo-ph-weight: 200;
  --typo-ph-opacity: .65;

  /* Surfaces & text */
  --md-sys-color-background:      #050505;
  --md-sys-color-on-background:   #EAEAEA;
  --md-sys-color-surface:         #0E0A12;   /* cards, panels */
  --md-sys-color-on-surface:      #EAEAEA;
  --md-sys-color-surface-variant: #171421;   /* inputs, chips */
  --md-sys-color-muted:           #a1a1aa;

  /* Strokes */
  --md-sys-color-outline:         rgba(160,140,255,.35);
  --md-sys-color-outline-variant: rgba(160,140,255,.55);

  /* Elevation (shadows) */
  --elevation-1: 0 4px 12px rgba(0,0,0,.35);
  --elevation-2: 0 8px 24px rgba(0,0,0,.40);
  --elevation-3: 0 12px 32px rgba(0,0,0,.45);

  /* ----- Shape / Corner scale ----- */
  --shape-corner-scale: 1;
  --shape-corner-sm-base: 8px;
  --shape-corner-md-base: 14px;
  --shape-corner-lg-base: 20px;
  --shape-corner-sm: calc(var(--shape-corner-sm-base) * var(--shape-corner-scale));
  --shape-corner-md: calc(var(--shape-corner-md-base) * var(--shape-corner-scale));
  --shape-corner-lg: calc(var(--shape-corner-lg-base) * var(--shape-corner-scale));
  --shape-corner-full: 9999px;

  /* Interaction */
  --state-hover-opacity:   .08;
  --state-focus-opacity:   .12;
  --state-pressed-opacity: .12;
  --focus-ring:            rgba(56,189,248,.7);

  /* Component aliases (single source of truth) */
  --ui-surface:        rgba(14,14,20,.92);
  --ui-surface-variant:var(--md-sys-color-surface-variant);
  --ui-stroke:         var(--md-sys-color-outline);
  --ui-stroke-hover:   var(--md-sys-color-outline-variant);

  /* QR frame (Transparent mode) */
  --qr-stroke-color:   rgba(139,92,246,.70);
  --qr-stroke-width:   1;
  --qr-stroke-glow:    0 0 18px rgba(139,92,246,.28);

  /* ----- Density / Compact scale ----- */
  --density-scale: 1;
  --density-control-h-base: 2.25rem;
  --density-gap-base: .75rem;
  --density-control-h: calc(var(--density-control-h-base) * var(--density-scale));
  --density-gap:       calc(var(--density-gap-base) * var(--density-scale));

  /* ----- Focus ring (consistent keyboard focus) ----- */
  --focus-ring-width: 2px;
  --focus-ring-color: color-mix(in oklab, var(--md-sys-color-primary) 35%, transparent);

  /* ----- Motion scale (global speed) ----- */
  --motion-scale: 1;
  --motion-duration-1-base: 120ms;
  --motion-duration-2-base: 180ms;
  --motion-duration-1: calc(var(--motion-duration-1-base) * var(--motion-scale));
  --motion-duration-2: calc(var(--motion-duration-2-base) * var(--motion-scale));
  --motion-ease: cubic-bezier(.2,.6,.2,1);

  /* ----- Export defaults (read by JS) ----- */
  --export-png-scale: 3;
  --export-filename: "LGBTQRCode";

  /* ----- Grid overlay knobs (for theme scaffold) ----- */
  --grid-size: 40px;     /* size of grid squares */
  --grid-opacity: .10;   /* overall overlay opacity */

  /* Hover / focus glow knobs */
  --hover-glow-color: color-mix(in oklab, var(--md-sys-color-primary) 30%, transparent);
  --hover-glow-blur:  8px;   /* glow softness */
  --focus-glow-blur:  10px;  /* slightly stronger for focus */

  /* Shared chevron for top controls */
  --chev-icon: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='white'><path d='M5.23 7.21a.75.75 0 011.06.02L10 10.17l3.71-2.94a.75.75 0 111.04 1.08l-4.23 3.35a.75.75 0 01-.96 0L5.21 8.31a.75.75 0 01.02-1.1z'/></svg>");
  
  /* Phone radius... */
  --phone-radius: 22px;
}  

:root.light{
  --md-sys-color-background: #fafafa;
  --md-sys-color-on-background: #0b0b0b;
  --md-sys-color-surface: #ffffff;
  --md-sys-color-on-surface: #111;
  --md-sys-color-surface-variant: #f1f1f6;
  --md-sys-color-outline: rgba(110,90,210,.35);
  --md-sys-color-outline-variant: rgba(110,90,210,.55);
  --brand-s: 86%;
  --brand-l: 54%;
  --chev-icon: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='black'><path d='M5.23 7.21a.75.75 0 011.06.02L10 10.17l3.71-2.94a.75.75 0 111.04 1.08l-4.23 3.35a.75.75 0 01-.96 0L5.21 8.31a.75.75 0 01.02-1.1z'/></svg>");
}


:root {
  --edge-gutter: clamp(12px, 1.5vw, 24px);
}

/* =========================
   2. GLOBAL SCAFFOLD
========================= */

body{
  background: linear-gradient(
    135deg,
    var(--md-sys-color-background),
    color-mix(in oklab, var(--md-sys-color-background) 85%, black)
  );
  color: var(--md-sys-color-on-background);
}

.theme-grid{ position:relative; }
.theme-grid::before{
  content:""; position:fixed; inset:0; pointer-events:none; opacity: var(--grid-opacity);
  background:
    linear-gradient(to right, var(--md-sys-color-primary) 1px, transparent 1px),
    linear-gradient(to bottom, var(--md-sys-color-primary) 1px, transparent 1px);
  background-size: var(--grid-size) var(--grid-size), var(--grid-size) var(--grid-size);
  z-index:0;
}
.theme-grid>*{ position:relative; z-index:1; }

/* Make room for fixed footer */
main{ padding-bottom:4.5rem; }

/* =========================
   3. CARDS / SURFACES
========================= */
.card{
  background: var(--md-sys-color-surface);
  color: var(--md-sys-color-on-surface);
  border: 1px solid var(--ui-stroke);
  border-radius: var(--shape-corner-lg);
  box-shadow: var(--elevation-2);
}
.step-card{ overflow:hidden; } /* remove square border artifact on rounded cards */

/* Open card highlight */
#stepper>div{ transition:background-color .15s,border-color .15s; }
#stepper .step-header{ transition:background-color .15s,border-color .15s,color .15s; }
#stepper>div.is-open>.step-header{
  background: color-mix(in oklab, var(--md-sys-color-primary) 12%, transparent);
  border-color: color-mix(in oklab, var(--md-sys-color-primary) 35%, transparent);
}

#stepper>div.is-open{
  background: color-mix(in oklab, var(--md-sys-color-primary) 6%, transparent);
  border-color: color-mix(in oklab, var(--md-sys-color-primary) 18%, transparent);
}

/* =========================
   4. CONTROLS (inputs/selects/Menu)
========================= */

input[type="text"],
input[type="email"],
input[type="url"],
input[type="number"],
input[type="search"],
input[type="password"],
input[type="color"],
textarea,
select{
  background: var(--ui-surface-variant);
  color: var(--md-sys-color-on-surface);
  border: 1px solid var(--ui-stroke);
  border-radius: var(--shape-corner-md);
  height: var(--density-control-h);
  box-shadow: 0 0 0 1px var(--ui-stroke) inset;  /* thin baseline */
  transition:
    box-shadow var(--motion-duration-1) var(--motion-ease),
    border-color var(--motion-duration-1) var(--motion-ease),
    color var(--motion-duration-1) var(--motion-ease),
    background-color var(--motion-duration-1) var(--motion-ease);
}

input:hover,
textarea:hover,
select:hover{
  box-shadow:
    0 0 0 1px var(--ui-stroke-hover) inset,
    0 0 var(--hover-glow-blur) var(--hover-glow-color);
}


/* Muted/disabled helper */
.field-muted,
.field-muted *{
  opacity:.55;
  pointer-events:none;
}

/* Unified top-bar controls (selects + Menu) */
.control,
#appMenuBtn,
#qrType,
#ecc,
select.rounded-md,
.topctl{
  background: var(--ui-surface);
  color: var(--md-sys-color-on-surface);
  border: 1px solid var(--ui-stroke);
  border-radius: var(--shape-corner-md);
  /* BASELINE: thin inset stroke only */
  box-shadow: 0 0 0 1px var(--ui-stroke) inset;
  height: var(--density-control-h);
  transition:
    box-shadow var(--motion-duration-1) var(--motion-ease),
    border-color var(--motion-duration-1) var(--motion-ease);
}


/* Emoji picker buttons */
#emojiGrid button{
  background: var(--ui-surface);
  border: 1px solid var(--ui-stroke);
  border-radius: var(--shape-corner-sm);
  box-shadow: 0 0 0 1px var(--ui-stroke) inset;
  height: calc(var(--density-control-h) * .9);
}

#emojiGrid button:hover{
  box-shadow: 0 0 0 1px var(--ui-stroke-hover) inset;
}

/* HOVER: keep thin inset + add faint outer glow */
.control:hover,
#appMenuBtn:hover,
select.rounded-md:hover,
.topctl:hover{
  box-shadow:
    0 0 0 1px var(--ui-stroke-hover) inset,
    0 0 var(--hover-glow-blur) var(--hover-glow-color);
}

/* FOCUS: thin inset stroke + stronger glow ring (unified) */
.control:focus,
#appMenuBtn:focus,
select.rounded-md:focus,
.topctl:focus,
button[data-emoji-target]:focus,
input:focus,
textarea:focus,
select:focus{
  outline: none;
  border-color: var(--ui-stroke-hover);
  box-shadow:
    0 0 0 1px var(--ui-stroke-hover) inset,       /* thin inset line */
    0 0 var(--focus-glow-blur) var(--focus-ring-color); /* outer glow */
}

/* Remove native arrow so our chevron matches */
select.rounded-md,
select.topctl{
  -webkit-appearance:none;
  appearance:none;
  padding-right:2rem;
}
button.topctl{ padding-right:2rem; }

/* === TOP BAR CONTROLS — unify visuals, alignment, and chevrons === */

/* Baseline look + alignment */
#qrType,
#ecc,
#appMenuBtn{
  display: inline-flex;
  align-items: center;                 /* vertical centering */
  gap: .5rem;
  height: var(--density-control-h);
  padding: 0 .875rem;
  line-height: 1;
  font-size: .9375rem;
  font-weight: 600;

  background: var(--ui-surface);
  color: var(--md-sys-color-on-surface);
  border: 1px solid var(--ui-stroke);
  border-radius: var(--shape-corner-md);
  box-shadow: 0 0 0 1px var(--ui-stroke) inset;   /* thin baseline stroke */
  transition:
    box-shadow var(--motion-duration-1) var(--motion-ease),
    border-color var(--motion-duration-1) var(--motion-ease);
}

/* Hover: keep thin inset + add faint outer glow */
#qrType:hover,
#ecc:hover,
#appMenuBtn:hover{
  box-shadow:
    0 0 0 1px var(--ui-stroke-hover) inset,
    0 0 var(--hover-glow-blur) var(--hover-glow-color);
}

/* Focus: thin inset + stronger glow ring */
#qrType:focus,
#ecc:focus,
#appMenuBtn:focus{
  outline: none;
  border-color: var(--ui-stroke-hover);
  box-shadow:
    0 0 0 1px var(--ui-stroke-hover) inset,
    0 0 var(--focus-glow-blur) var(--focus-ring-color);
}

/* Remove native select chrome so we can center text & add our own chevrons */
#qrType,
#ecc{
  -webkit-appearance: none;
          appearance: none;
  padding-right: 2rem;                   /* room for chevron */
}

/* Chevrons for the two selects via background image */
#qrType,
#ecc{
  background-image: var(--chev-icon);
  background-repeat: no-repeat;
  background-position: right .6rem center;
  background-size: .75rem .75rem;
}

/* Chevron for the Menu button via pseudo (keeps it identical) */
#appMenuBtn{
  position: relative;
  padding-right: 2rem;                   /* room for chevron */
}
#appMenuBtn::after{
  content:"";
  position:absolute;
  right:.6rem;
  top:50%;
  width:.75rem; height:.75rem;
  transform:translateY(-50%);
  opacity:.85;
  background-image: var(--chev-icon);
  background-repeat:no-repeat;
  background-position:center;
  background-size:100% 100%;
}

/* Optional: ensure consistent min-width so short labels (like “M”) don’t look cramped */
#ecc{ min-width: 3.25rem; justify-content:center; }

/* Chevron for top controls */
.topctl--chev::after{
  content:"";
  pointer-events:none;
  position:absolute;
  right:.6rem;
  top:50%;
  width:.75rem;
  height:.75rem;
  transform:translateY(-50%);
  opacity:.85;
  background-repeat:no-repeat;
  background-position:center;
  background-size:100% 100%;
  background-image: var(--chev-icon);
}

/* Emoji picker trigger = match other controls */
button[data-emoji-target]{
  /* visuals */
  background: var(--ui-surface);
  color: var(--md-sys-color-on-surface);
  border: 1px solid var(--ui-stroke);
  border-radius: var(--shape-corner-md);
  box-shadow: 0 0 0 1px var(--ui-stroke) inset, var(--elevation-1);

  /* sizing / type */
  height: var(--density-control-h);
  padding: 0 .875rem;
  line-height: 1;
  font-size: .875rem;
  font-weight: 600;

  /* behavior */
  cursor: pointer;
  transition:
    box-shadow var(--motion-duration-1) var(--motion-ease),
    border-color var(--motion-duration-1) var(--motion-ease);
}

button[data-emoji-target]:hover{
  box-shadow: 0 0 0 1px var(--ui-stroke-hover) inset, var(--elevation-2);
}

#emojiGrid button:focus{
  outline: none;
  border-color: var(--ui-stroke-hover);
  box-shadow:
    0 0 0 1px var(--ui-stroke-hover) inset,
    0 0 var(--focus-glow-blur) var(--focus-ring-color);
}

/* If it was getting a white default button style anywhere, neutralize it */
button[data-emoji-target]::-moz-focus-inner{ border: 0; }

/* DISPLAY: section headers (Caption / Design / Mechanicals / Finish) */
.step-header,
.step-header button,
.step-header .title{
  font-family: var(--font-family);
  font-size: var(--typo-display-size);
  font-weight: var(--typo-display-weight);
  letter-spacing: var(--typo-display-track);
  color: var(--md-sys-color-on-surface);
}

/* LABELS: field labels like “Module Fill”, “Background” */
label,
.field-label{
  font-family: var(--font-family);
  font-size: var(--typo-label-size);
  font-weight: var(--typo-label-weight);
  letter-spacing: var(--typo-label-track);
  color: var(--typo-label-color);
}

/* INPUT TEXT: value text inside inputs/selects/buttons */
input, textarea, select,
.control, .topctl, button[data-emoji-target]{
  font-family: var(--font-family);
  font-size: var(--typo-input-size);
  font-weight: var(--typo-input-weight);
}

/* PLACEHOLDERS: “dummy” text in fields */
input::placeholder,
textarea::placeholder{
  color: var(--typo-ph-color);
  font-weight: var(--typo-ph-weight);
  opacity: var(--typo-ph-opacity);
}

/* turn OFF generic :focus glow */
#stepper .step-header:focus { box-shadow: none; }

/* show the nice ring only for keyboard nav */
#stepper .step-header:focus-visible{
  border-color: var(--ui-stroke-hover);
  box-shadow:
    0 0 0 1px var(--ui-stroke-hover) inset,
    0 0 var(--focus-glow-blur) var(--focus-ring-color);
}

/* default: no transitions before JS marks ready */
:not(.ui-ready) #stepper .step-header,
:not(.ui-ready) #stepper > .step-card{
  transition: none !important;
  box-shadow: none !important;
}

/* =========================
   PREVIEW LAYOUT
========================= */

/* Portrait stage wrapper (outer container) */
.preview-stage{
  position: relative;
  width: 100%;
  max-width: 400px;
  aspect-ratio: 2 / 3;
  margin-inline: auto;
  border-radius: var(--shape-corner-lg);
  display: grid;
  place-items: center;
  overflow: visible;
}

/* Main preview wrapper (card) */
#qrPreview{
  position: relative;
  display: grid;
  place-items: center;
  box-sizing: border-box;
  width: 100%;
  border-radius: var(--phone-radius);
  margin: 0;
  border: none;
  background: transparent;
  overflow: visible;
  filter: drop-shadow(0 12px 32px rgba(0,0,0,.35));
}

/* Transparent mode — border & glow live on this same element */
#qrPreview.card--stroke {
  background: none;
  border: calc(var(--qr-stroke-width) * 1px) solid var(--qr-stroke-color);
  border-radius: var(--phone-radius);
  box-shadow: var(--qr-stroke-glow);
}

/* Filled mode — same box, same radius, just a fill color */
#qrPreview.card--fill {
  border: none;
  box-shadow: none;
  background: var(--frame-color, #ffffff); /* set by JS */
  border-radius: var(--phone-radius);
}

/* QR mount = container for the SVG */
#qrMount{
  width: auto;
  height: 100%;
  max-height: 100%;
  border-radius: inherit;
  display: block;
  place-items: center;
}
#qrMount > svg{
  display: block;
  width: 100%;
  height: auto;
  border-radius: inherit;
}

/* =========================
   ARROWS
========================= */
.nav-arrow{
  background: var(--ui-surface);
  border: 1px solid var(--ui-stroke);
  border-radius: var(--shape-corner-full);
  box-shadow: 0 0 0 1px var(--ui-stroke) inset; /* thin baseline */
}
.nav-arrow:hover{
  box-shadow:
    0 0 0 1px var(--ui-stroke-hover) inset,
    0 0 var(--hover-glow-blur) var(--hover-glow-color);
}
.nav-arrow:focus{
  outline: none;
  border-color: var(--ui-stroke-hover);
  box-shadow:
    0 0 0 1px var(--ui-stroke-hover) inset,
    0 0 var(--focus-glow-blur) var(--focus-ring-color);
}

/* Triangle glyphs */
#prevSubtype::after,
#nextSubtype::after{
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  width: 0;
  height: 0;
  transform: translate(-50%, -50%);
}
#prevSubtype::after{
  border-top: 6px solid transparent;
  border-bottom: 6px solid transparent;
  border-right: 10px solid currentColor;
}
#nextSubtype::after{
  border-top: 6px solid transparent;
  border-bottom: 6px solid transparent;
  border-left: 10px solid currentColor;
}

/* Put each arrow just outside the card edges */
#prevSubtype{
  top:50%;
  left: calc(-1.75 * var(--edge-gutter));        /* or: calc(-1 * var(--edge-gutter)) */
  right: auto;
  transform: translateY(-50%);
  z-index: 20;
}
#nextSubtype{
  top:50%;
  right: calc(-1.75 * var(--edge-gutter));       /* or: calc(-1 * var(--edge-gutter)) */
  left:  auto;
  transform: translateY(-50%);
  z-index: 20;
}

/* =========================
   FOOTER
========================= */
/* ===== Footer ===== */
.app-footer{
  position: fixed;      /* keep it pinned */
  left: 0; right: 0; bottom: 0;
  z-index: 20;
  padding: 14px 0 16px; /* content padding; the rule will ignore this */
  background: #02272a;  /* deep turquoise */
  color: #e0f9f8;
  -webkit-backdrop-filter: blur(4px);
  backdrop-filter: blur(4px);
  border-top: 1px solid rgba(0,0,0,.25); /* subtle edge */
  overflow: hidden;     /* clip the rule if it glows */
  position: fixed; /* keep it pinned to the bottom */
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 20;
}

.app-footer__rule{
  /* put the line AT THE TOP BORDER, full width */
  position: absolute;
  top: 0; left: 0; right: 0;
  height: 1px;
  width: 100%;
  margin: 0;            /* kill the old auto-centering */
  border-radius: 0;     /* no pill rounding */
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(0,240,200,.25) 15%,
    rgba(0,240,200,.70) 50%,
    rgba(0,240,200,.25) 85%,
    transparent 100%
  );
  box-shadow:
    0 0 .5px rgba(0,240,200,.5),
    0 0 10px rgba(0,240,200,.25);
  pointer-events: none;
}

.app-footer__text{
  text-align: center;
  font-size: .8125rem;
  color: rgba(224,249,248,.85);
  margin-top: 8px;      /* space under the rule */
}
/* brand tuning on light */
 :root.light{
  --brand-s: 86%;
  --brand-l: 54%;
}

/* High-contrast toggle (add .hc on <html>) */
:root.hc{
  --md-sys-color-on-surface: #fff;
  --md-sys-color-outline: rgba(255,255,255,.65);
  --md-sys-color-outline-variant: rgba(255,255,255,.9);
}

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce){
  :root{ --motion-scale: .01; }
}

/* Make the actual swatch inherit shape and remove its inner border */
input[type="color"]::-webkit-color-swatch-wrapper {
  padding: 0;
  border-radius: 50%
}
input[type="color"]::-webkit-color-swatch {
  border: none;
  border-radius: 50%
}
input[type="color"]::-moz-color-swatch {
  border: none;
  border-radius: 50%
}

/* Optional hover/focus feedback (subtle glow) */
input[type="color"]:hover{
  filter: drop-shadow(0 0 4px var(--ui-stroke-hover));
}
input[type="color"]:focus{
  outline: none;
  filter: drop-shadow(0 0 6px var(--focus-ring-color));
}

/* Group color pickers + hex fields neatly */
.color-field {
  display: flex;
  align-items: center;
  gap: var(--density-gap);
}

/* Make hex field visually tied to its picker */
.color-field input[type="text"] {
  flex: 1;
  text-align: center;
  font-family: monospace;
  font-size: .875rem;
  font-weight: 500;
  color: var(--md-sys-color-on-surface);
  background: var(--ui-surface-variant);
  border: 1px solid var(--ui-stroke);
  border-radius: var(--shape-corner-md);
  height: var(--density-control-h);
  box-shadow: 0 0 0 1px var(--ui-stroke) inset;
  transition:
    box-shadow var(--motion-duration-1) var(--motion-ease),
    border-color var(--motion-duration-1) var(--motion-ease);
}

.color-field input[type="text"]:hover {
  box-shadow:
    0 0 0 1px var(--ui-stroke-hover) inset,
    0 0 var(--hover-glow-blur) var(--hover-glow-color);
}

.color-field input[type="text"]:focus {
  outline: none;
  border-color: var(--ui-stroke-hover);
  box-shadow:
    0 0 0 1px var(--ui-stroke-hover) inset,
    0 0 var(--focus-glow-blur) var(--focus-ring-color);
}

/* Color chip: fixed, perfect circle — never stretch */
input[type="color"]{
  width: 1.75rem;
  height: 1.75rem;
  min-width: 1.75rem;       /* prevent flex/grid shrinking */
  min-height: 1.75rem;
  aspect-ratio: 1 / 1;      /* stay square even if a parent tries to stretch */
  flex: 0 0 1.75rem;        /* don’t grow or shrink */
  align-self: center;       /* keeps it centered in tall rows */
  padding: 0;
  border: none;
  background: transparent;
  cursor: pointer;
  -webkit-appearance: none;
          appearance: none;
  box-sizing: content-box;
}

/* Make the actual swatch inherit shape and remove its inner border */
input[type="color"]::-webkit-color-swatch-wrapper { padding: 0; border-radius: 50% }
input[type="color"]::-webkit-color-swatch { border: none; border-radius: 50% }
input[type="color"]::-moz-color-swatch { border: none; border-radius: 50% }

/* ---- Color rows: keep chip circular and let the hex input take the width ---- */

/* Generic label rows: title + control */
label.text-sm.block{
  display: grid;
  grid-template-columns: auto 1fr;   /* title, then a flexible control */
  align-items: center;
  gap: .75rem;
}

/* Rows that include a color swatch: title · swatch · hex */
label:has(input[type="color"]){
  grid-template-columns: auto auto 1fr; /* title, chip, hex input */
}

/* Make the hex field actually flex and not collapse */
label:has(input[type="color"]) input[type="text"]{
  width: 100%;
  min-width: 16ch;     /* keep it readable on tight layouts */
}

/* Optional: keep the chip from crowding the field */
label:has(input[type="color"]) input[type="color"]{
  margin-inline-start: .25rem;
}

/* Right column container */
#stepper {
  display: flex;
  flex-direction: column;
  min-height: 100vh;

  min-width: 0;                           /* allow it to fill the grid track */
  width: 100%;
  max-width: 560px;                       /* roomy but not sprawling */
  padding-right: clamp(16px, 5vw, 72px);  /* visual nudge from the right edge */
}

/* Caption header never moves */
#stepper [data-step="caption"] .step-header {
  position: sticky;
  top: 0;           /* adjust if your app header overlaps */
  z-index: 20;
}

/* When MECHANICALS is active: fill + park mode */
#stepper.mech-active [data-step="mechanicals"] { flex: 1 1 auto; min-height: 0; }

/* Inner scroll lives on the panel the JS marks as .scroll-frame */
#stepper.mech-active [data-step="mechanicals"] [data-step-panel].scroll-frame {
  max-height: 100%;
  overflow: auto;
}

/* Finish parks at bottom */
#stepper.mech-active [data-step="finish"] {
  position: sticky;
  bottom: 0;
  z-index: 15;
}

/* When Finish is the active view, return to normal flow */
#stepper.finish-active [data-step="mechanicals"],
#stepper.finish-active [data-step="finish"] {
  position: static;
  flex: 0 0 auto;
}

/* nudge the right panel in by the same gutter */
#stepper{ margin-right: var(--edge-gutter); }
